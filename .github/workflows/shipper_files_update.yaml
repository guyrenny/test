name: integrations files update

on:
  pull_request:
    types: [opened]
    paths:
      - '**/aws-shipper/**/template.yaml'
       
  workflow_dispatch:

jobs:
  check_version:
    # if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    # outputs:
    #   template_updated: ${{ env.updated }}
    env:
      integration_list: "aws-sqs,cloudtrail-sns,cloudtrail-sqs,cloudtrail,cloudwatch-logs,s3-sns,s3-sqs,s3,vpc-flow-logs"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get branch name and switch to pr branch
        run: |
          branch_name=${{ github.head_ref }}
          echo "branch_name=$branch_name" >> $GITHUB_ENV
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          echo pull
          git pull origin master
          echo fetch
          git fetch origin
          git fetch
          git branch
          echo switch
          git checkout $branch_name
          # git switch $branch_name --track origin/master 
          # need to check if i need this condition
          git pull origin ${branch_name} --rebase

      - uses: actions/checkout@v2.1.0
      - uses: jitterbit/get-changed-files@v1
        id: get_changed_files
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get template version 
        run: |
          changed_files="${{ steps.get_changed_files.outputs.all }}"
          if [[ $changed_files =~ v([0-9]+\.[0-9]+\.[0-9]+)/template.yaml ]]; then 
            template_version="${BASH_REMATCH[1]}"
            echo "template_version=$template_version" >> $GITHUB_ENV
          fi

# create a new folder with new version
      - name: Create new directories with new versions
        run: |
          template_version=$(cat integrations/shared/aws-shipper/**/template.yaml | grep "SemanticVersion" | grep -oE '[^ ]+$')
          chmod +x ./scripts/update_version.sh
          for integration in $(echo $integration_list | tr "," "\n")
          do
            if [ -d "integrations/${integration}" ]; then
              integration_version=$(cat ./integrations/$integration/changelog.yaml | grep " version" | grep -oE '[^ ]+$' | tail -1)              
              echo "currenct version: ${integration_version}"
              echo "integration: ${integration}"
              integration_version=$(./scripts/update_version.sh $integration_version)
              echo "update version: ${integration_version}"
              mkdir -p integrations/${integration}/v$integration_version
            fi
          done

## add to the new directory fields and group files
      - name: Create fields and groups files
        run: |
          chmod +x ./scripts/update_version.sh
          for integration in $(echo $integration_list | tr "," "\n")
          do
            integration_version=$(cat ./integrations/$integration/manifest.yaml | grep " revision" | grep -oE '[^ ]+$' | tail -1) 
            integration_new_version=$(./scripts/update_version.sh $integration_version)
            if [ -d "integrations/${integration}/v$integration_version" ]; then
              ls integrations/${integration}/
              cp integrations/$integration/v$integration_version/fields.yaml integrations/$integration/v$integration_new_version/
              cp integrations/$integration/v$integration_version/groups.yaml integrations/$integration/v$integration_new_version/
            fi
          done
          
## update the changloge file
# need to change the $update_version to the actual versionj
      - name: Update the changloge file
        run: |
          chmod +x ./scripts/update_version.sh
          for integration in $(echo $integration_list | tr "," "\n")
          do
            if [ -d "integrations/${integration}" ]; then
              integration_version=$(cat ./integrations/$integration/changelog.yaml | grep " version" | grep -oE '[^ ]+$' | tail -1)
              update_version=$(./scripts/update_version.sh $integration_version)
              echo " 
              - version: $update_version
              description_md: |
                # Changes
                - Update AWS Logs Lambda shipper to v${{ env.template_version }}. Read [Changelog](https://github.com/coralogix/cloudformation-coralogix-aws/blob/master/aws-integrations/aws-shipper-lambda/CHANGELOG.md) for more details." >> integrations/${integration}/changelog.yaml
            fi
          done
          
## update the manifest file
# need to change the $update_version to the actual version
      - name: Update the menifest file
        run: |
          chmod +x ./scripts/update_version.sh
          for integration in $(echo $integration_list | tr "," "\n")
          do
            if [ -d "integrations/${integration}" ]; then
              integration_version=$(cat ./integrations/$integration/manifest.yaml | grep " revision" | grep -oE '[^ ]+$' | tail -1)
              update_version=$(./scripts/update_version.sh $integration_version)
              echo "  - revision: $update_version
              template:
                type: CloudFormation
                cloudformation: ../shared/aws-shipper/v${{ env.template_version }}/template.yaml
              field_definitions: v$update_version/fields.yaml
              group_definitions: v$update_version/groups.yaml" >> integrations/${integration}/manifest.yaml
            fi
          done
          
## git add
      - name: Git add
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git status
## git commit
      - name: Commit changes
        uses: planetscale/ghcommit-action@v0.1.19
        with:
          commit_message: "Update the integrations files"
          repo: guyrenny/test
          branch: ${{env.branch_name}}
          file_pattern: '*.yaml'
        env:
          GITHUB_TOKEN: ${{secrets.DESTINATION_REPO_TOKEN}}
